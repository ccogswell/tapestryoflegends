# Loom of Legends Multi-Domain Nginx Configuration
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/loomoflegends.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/loomoflegends.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Upstream definitions
    upstream tapestry-frontend {
        server tapestry-frontend:3000;
    }
    
    upstream tapestry-backend {
        server tapestry-backend:5000;
    }
    
    upstream tapestryoflegends {
        server tapestryoflegends:5000;
    }
    
    upstream tapestryofheros {
        server tapestryofheros:5000;
    }
    
    upstream tapestryofworlds {
        server tapestryofworlds:5000;
    }

    # Main domain: loomoflegends.com (Frontend)
    server {
        listen 80;
        server_name loomoflegends.com;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name loomoflegends.com;
        
        limit_req zone=general burst=20 nodelay;

        # Main frontend application
        location / {
            proxy_pass http://tapestry-frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_redirect off;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://tapestry-frontend/health;
            access_log off;
        }
    }

    # API subdomain: api.loomoflegends.com (Backend API Gateway)
    server {
        listen 80;
        server_name api.loomoflegends.com;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name api.loomoflegends.com;
        
        limit_req zone=api burst=10 nodelay;

        # API Gateway routes
        location / {
            proxy_pass http://tapestry-backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # API-specific headers
            proxy_set_header Content-Type $content_type;
            proxy_set_header Authorization $http_authorization;
        }

        # Health check
        location /health {
            proxy_pass http://tapestry-backend/health;
            access_log off;
        }
    }

    # Legends subdomain: legends.loomoflegends.com (Discord Bot Status)
    server {
        listen 80;
        server_name legends.loomoflegends.com;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name legends.loomoflegends.com;
        
        # Discord Bot status and health endpoints only
        location / {
            proxy_pass http://tapestryoflegends;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /health {
            proxy_pass http://tapestryoflegends/health;
            access_log off;
        }

        location /status {
            proxy_pass http://tapestryoflegends/status;
        }
    }

    # Heros subdomain: heros.loomoflegends.com (Hero Management App)
    server {
        listen 80;
        server_name heros.loomoflegends.com;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name heros.loomoflegends.com;
        
        limit_req zone=general burst=20 nodelay;

        # Hero Management Application
        location / {
            proxy_pass http://tapestryofheros;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
        }

        location /health {
            proxy_pass http://tapestryofheros/health;
            access_log off;
        }
    }

    # Worlds subdomain: worlds.loomoflegends.com (World Building App)
    server {
        listen 80;
        server_name worlds.loomoflegends.com;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name worlds.loomoflegends.com;
        
        limit_req zone=general burst=20 nodelay;

        # World Building Application
        location / {
            proxy_pass http://tapestryofworlds;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
        }

        location /health {
            proxy_pass http://tapestryofworlds/health;
            access_log off;
        }
    }

    # Security headers for all domains
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.discordapp.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https: http:; font-src 'self' data:; connect-src 'self' https: wss:;" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Logging
    access_log /var/log/nginx/loomoflegends.access.log;
    error_log /var/log/nginx/loomoflegends.error.log;
}